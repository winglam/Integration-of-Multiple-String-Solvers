(declare-variable v String)
(assert (= (Length v) 5))
(define-fun c1 () Regex (RegexConcat (Str2Reg "q") (RegexStar (Str2Reg "r"))))
(define-fun c2 () Regex (RegexConcat (Str2Reg "r") (RegexConcat (Str2Reg "r") (Str2Reg "s"))))
(define-fun c3 () Regex (RegexConcat (Str2Reg "q") (RegexConcat (RegexStar (Str2Reg "r")) (Str2Reg "s"))))
(define-fun c4 () Regex (RegexStar (Str2Reg "t")))
(define-fun c5 () Regex (RegexConcat (Str2Reg "q") (RegexConcat (Str2Reg "r") (RegexConcat (Str2Reg "r") (RegexConcat (Str2Reg "s") (Str2Reg "t"))))))
(define-fun c6 () Regex (RegexConcat (RegexConcat (Str2Reg "q") (RegexStar (Str2Reg "r"))) (RegexConcat (RegexConcat (Str2Reg "r") (RegexConcat (Str2Reg "r") (Str2Reg "s"))) (RegexStar (Str2Reg "t")))))
(assert (RegexIn v c6))
(assert (RegexIn v c5))
(check-sat)
(get-model)
